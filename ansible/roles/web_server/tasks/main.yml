---
- name: Install git
  apt:
    name: git
    state: present
  become: yes

- name: Remove existing app directory
  file:
    path: /opt/devops-app
    state: absent
  become: yes

- name: Clone application repository
  git:
    repo: https://github.com/Ngumonelson123/DevOps-Assignment.git
    dest: /opt/devops-app
    force: yes
    accept_hostkey: yes
  become: yes
  timeout: 60

- name: Create environment file from variables
  copy:
    content: |
      POSTGRES_DB={{ lookup('env', 'POSTGRES_DB') }}
      POSTGRES_USER={{ lookup('env', 'POSTGRES_USER') }}
      POSTGRES_PASSWORD={{ lookup('env', 'POSTGRES_PASSWORD') }}
      POSTGRES_PORT={{ lookup('env', 'POSTGRES_PORT') }}
      GRAFANA_ADMIN_PASSWORD={{ lookup('env', 'GRAFANA_ADMIN_PASSWORD') }}
      NODE_ENV={{ lookup('env', 'NODE_ENV') }}
      FLASK_ENV={{ lookup('env', 'FLASK_ENV') }}
    dest: /opt/devops-app/.env
    mode: '0644'
  become: yes

- name: Copy environment file to docker directory
  copy:
    src: /opt/devops-app/.env
    dest: /opt/devops-app/docker/.env
    remote_src: yes
    mode: '0644'
  become: yes

- name: Copy environment file to monitoring directory
  copy:
    src: /opt/devops-app/.env
    dest: /opt/devops-app/monitoring/.env
    remote_src: yes
    mode: '0644'
  become: yes

- name: Create dynamic Prometheus configuration
  template:
    src: prometheus.yml.j2
    dest: /opt/devops-app/monitoring/prometheus.yml
    mode: '0644'
  become: yes

- name: Update monitoring docker-compose.yml
  copy:
    src: ../monitoring/docker-compose.yml
    dest: /opt/devops-app/monitoring/docker-compose.yml
    mode: '0644'
  become: yes

- name: Start application services
  shell: cd /opt/devops-app/docker && docker-compose up -d --build
  become: yes
  async: 300
  poll: 10

- name: Create monitoring certs directory
  file:
    path: /opt/devops-app/monitoring/certs
    state: directory
    mode: '0755'
  become: yes

- name: Generate SSL certificate for monitoring
  shell: >
    openssl req -x509 -nodes -days 365 -newkey rsa:2048
    -keyout /opt/devops-app/monitoring/certs/server.key
    -out /opt/devops-app/monitoring/certs/server.crt
    -subj "/C=US/ST=State/L=City/O=DevOps/CN={{ ansible_default_ipv4.address }}"
    -addext "subjectAltName=IP:{{ ansible_default_ipv4.address }}"
  args:
    creates: /opt/devops-app/monitoring/certs/server.crt
  become: yes

- name: Start monitoring services
  shell: cd /opt/devops-app/monitoring && docker-compose up -d
  become: yes
  async: 180
  poll: 10

- name: Restart monitoring to pick up config changes
  shell: cd /opt/devops-app/monitoring && docker-compose restart prometheus
  become: yes

- name: Make shell scripts executable
  file:
    path: "/opt/devops-app/{{ item }}"
    mode: '0755'
  become: yes
  loop:
    - debug-metrics.sh
    - deploy.sh
    - fix-dashboard.sh
    - generate-test-data.sh
    - log-monitor.sh
    - log-viewer.sh
    - setup-log-monitoring.sh
    - simple-metrics.sh
    - test-deployment.sh
    - test-log-metrics.sh
    - update-inventory.sh
    - monitoring/log-exporter.sh
  ignore_errors: yes

- name: Wait for services to be ready
  wait_for:
    port: "{{ item }}"
    host: "{{ ansible_default_ipv4.address }}"
    delay: 5
    timeout: 30
  loop:
    - 3000
    - 5000
    - 3001
    - 9090
